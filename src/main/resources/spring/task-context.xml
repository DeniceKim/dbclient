<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 실행기 -->
    <!--
    pool-size        : 쓰레드 풀의 개수를 지정 / 표현식 : 최소-최대크기 or 개수
    queue-capacity   : 큐의 최대크기 / 풀의 쓰레드가 모두 작업을 실행중인 경우 큐에서 대기
    keep-alive       : 풀에 있는 쓰레드의 최대 유휴 시간 / 단위는 초
    rejection-policy : 큐가 다 차서 더이상 작업을 받을 수 없을 때 작업을 어떻게 처리할지를 결정한다.
        ABORT(기본)       : 작업을 거부하고 예외를 발생한다.
        CALLER_RUNS     : 호출한 쓰레드를 이용해서 실행한다.
        DISCARD         : 작업을 실행하지 않고 무시한다.
        DISCARD_ORDEST  : 큐의 헤드에서 하나를 제거하고 작업을 추가한다.
    -->

    <!-- 로그인 로그를 기록하기 위한 실행기 -->
    <task:executor id="memberLoginLogExecutor" 	pool-size="20" queue-capacity="0" rejection-policy="CALLER_RUNS"/>
    
    <!-- 로그인 로그를 기록하기 위한 실행기 -->
    <task:executor id="QueryExecuteLogExecutor" pool-size="20" queue-capacity="0" rejection-policy="CALLER_RUNS"/>
    

	<!-- 스케줄러  
	<task:scheduler id="xxxx" pool-size="10"/>
	<task:scheduled-tasks scheduler="xxxx">
		<task:scheduled ref="xxxx" method="init" cron="0 0 0 * * *"/>
		<task:scheduled ref="xxxx" method="updateInit" fixed-delay="60000"/>
	</task:scheduled-tasks>
	-->
</beans>